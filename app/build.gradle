/*
 * Copyright (C) 2018  José Miguel García Urrutia <josemgu91@gmail.com>
 *
 * This file is part of HabitTune.
 *
 * HabitTune is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * HabitTune is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.josemgu91.habittune"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 23
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    flavorDimensions "data"
    productFlavors {
        clean {
            dimension "data"
            versionName "pre-1.0-vc${defaultConfig.versionCode}"
        }
        withTestData {
            dimension "data"
            versionName "pre-1.0-vc${defaultConfig.versionCode}-internal"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_IN_RAM_DATABASE", "false"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_IN_RAM_DATABASE", "true"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def supportLibraryVersion = '28.0.0'
    def constraintLayoutVersion = '1.1.3'
    def roomVersion = "1.1.1"
    def lifecycleVersion = "1.1.1"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.lifecycle:common-java8:$lifecycleVersion"
    implementation "com.android.support:preference-v14:$supportLibraryVersion"

    def sqLiteSupportLibraryVersion = '3.25.1'
    implementation "io.requery:sqlite-android:$sqLiteSupportLibraryVersion"
    def simpleStackVersion = '1.13.0'
    implementation "com.github.Zhuinden:simple-stack:$simpleStackVersion"
    def colorPickerVersion = '1.0.2'
    implementation "com.jaredrummler:colorpicker:$colorPickerVersion"
    def flexibleAdapterVersion = '5.0.6'
    implementation "eu.davidea:flexible-adapter:$flexibleAdapterVersion"
    def mpAndroidChartVersion = 'v3.0.3'
    implementation "com.github.PhilJay:MPAndroidChart:$mpAndroidChartVersion"
    def fastCsvVersion = '1.0.3'
    implementation "de.siegmar:fastcsv:$fastCsvVersion"
    def firebaseVersion = '16.0.4'
    implementation("com.google.firebase:firebase-core:$firebaseVersion", {
        exclude group: 'com.android.support'
    })
    def crashlyticsVersion = '2.9.5'
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion"
    def firebasePerformanceMonitoringVersion = '16.2.0'
    implementation("com.google.firebase:firebase-perf:$firebasePerformanceMonitoringVersion", {
        exclude group: 'com.android.support'
    })
    def appIntroVersion = 'v4.2.3'
    implementation "com.github.paolorotolo:appintro:$appIntroVersion"

    def jUnitVersion = '4.12'
    def testRunnerVersion = '1.0.2'
    def espressoVersion = '3.0.2'
    testImplementation "junit:junit:$jUnitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    testImplementation "android.arch.persistence.room:testing:$roomVersion"
    testImplementation "android.arch.core:core-testing:$lifecycleVersion"
}

//TODO: Use release keystore.
task installRelease(dependsOn: "installCleanDebug", type: Exec, group: "help") {
    commandLine 'adb', 'shell', 'am', 'start', '-n', "com.josemgu91.habittune/.android.ActivityMain"
}

apply plugin: 'com.google.gms.google-services'